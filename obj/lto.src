	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_bsocket_create
_bsocket_create:
	ld	hl, -4
	call	__frameset
	call	_srl_GetCDCStandardDescriptors
	ld	de, 36106
	push	de
	push	hl
	ld	hl, 0
	push	hl
	ld	hl, _handle_usb_event
	push	hl
	call	_usb_Init
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(ix - 1), 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_6
	ld	(ix - 4), hl
BB0_2:
	call	_usb_HandleEvents
	ld	a, (_bs+64)
	cp	a, 2
	jr	nz, BB0_4
	ld	hl, 1
	push	hl
	pea	ix - 1
	ld	hl, _bs
	push	hl
	call	_srl_Read
	pop	hl
	pop	hl
	pop	hl
	ld	a, (_bs+64)
BB0_4:
	cp	a, 3
	jr	nz, BB0_2
	ld	hl, _usb_HandleEvents
	ld	(_bs+61), hl
	xor	a, a
	ld	(_bs+65), a
	sbc	hl, hl
	push	hl
	pop	de
	ld	(_bs+66), de
	inc	a
	ld	(_bs+69), a
	ld	(_bs+70), hl
	ld	(_bs+73), de
	ld	hl, (ix - 4)
BB0_6:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_8
	ld	a, 0
	jr	BB0_9
BB0_8:
	ld	a, -1
BB0_9:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_handle_usb_event
_handle_usb_event:
	ld	hl, -3
	call	__frameset
	ld	bc, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, (ix + 12)
	push	hl
	push	de
	push	bc
	call	_srl_UsbEventCallback
	push	hl
	pop	bc
	pop	hl
	pop	hl
	pop	hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB1_14
	ld	hl, (ix + 6)
	dec	hl
	ld	de, 12
	push	hl
	pop	iy
	or	a, a
	sbc	hl, de
	jp	nc, BB1_14
	ld	hl, JTI1_0
	lea	de, iy
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB1_3:
	ld	hl, _bs
	push	hl
	ld	(ix - 3), bc
	call	_srl_Close
	ld	bc, (ix - 3)
	pop	hl
	xor	a, a
	jp	BB1_13
BB1_4:
	ld	(ix - 3), bc
	ld	hl, 0
	ld	de, 8
	push	de
	push	hl
	push	hl
	call	_usb_FindDevice
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB1_10
	ld	hl, (_bs+58)
	jp	BB1_11
BB1_6:
	ld	(ix - 3), bc
	call	_usb_GetRole
	ld	bc, (ix - 3)
	ld	a, (_bs+64)
	bit	4, l
	jr	nz, BB1_14
	cp	a, 2
	jr	z, BB1_14
	ld	hl, (ix + 9)
	ld	(_bs+58), hl
	push	hl
	call	_usb_ResetDevice
	ld	bc, (ix - 3)
	pop	hl
	jr	BB1_14
BB1_9:
	ld	(ix - 3), bc
	ld	hl, (ix + 9)
BB1_10:
	ld	(_bs+58), hl
BB1_11:
	ld	iy, _bs+77
	ld	de, 1024
	ld	bc, 9600
	push	bc
	ld	bc, -1
	push	bc
	push	de
	push	iy
	push	hl
	ld	hl, _bs
	push	hl
	call	_srl_Open
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 3)
	jr	nz, BB1_14
	ld	a, 2
BB1_13:
	ld	(_bs+64), a
BB1_14:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI1_0
JTI1_0:
	dl	BB1_3
	dl	BB1_6
	dl	BB1_3
	dl	BB1_9
	dl	BB1_14
	dl	BB1_14
	dl	BB1_9
	dl	BB1_3
	dl	BB1_14
	dl	BB1_14
	dl	BB1_14
	dl	BB1_4

	section	.text,"ax",@progbits
	public	_bsocket_connect
_bsocket_connect:
	ld	hl, -28
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, _timeout_action
	ld	bc, 0
	ld	(ix - 22), bc
	lea	bc, ix - 6
	ld	(ix - 28), bc
	lea	bc, ix - 16
	ld	(ix - 25), bc
	ld	(ix - 3), de
	ld	(ix - 4), -68
	ld	(ix - 9), hl
	push	iy
	call	_strlen
	pop	de
	ld	de, 5
	add	hl, de
	ld	(ix - 19), hl
	ld	hl, 3
	push	hl
	pea	ix - 19
	ld	hl, _bs
	push	hl
	call	_srl_Write
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	pea	ix - 4
	ld	hl, _bs
	push	hl
	call	_srl_Write
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	pop	de
	inc	hl
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	hl, _bs
	push	hl
	call	_srl_Write
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 3
	push	hl
	pea	ix - 3
	ld	hl, _bs
	push	hl
	call	_srl_Write
	pop	hl
	pop	hl
	pop	hl
	xor	a, a
	ld	(_bsock_timeout), a
	ld	hl, _bs+66
	ld	hl, (hl)
	push	hl
	call	_usb_MsToCycles
	pop	bc
	push	de
	push	hl
	ld	hl, (ix - 25)
	push	hl
	call	_usb_StartTimerCycles
	pop	hl
	pop	hl
	pop	hl
BB2_1:
	call	_usb_HandleEvents
	ld	iy, (ix - 28)
	ld	de, (ix - 22)
	add	iy, de
	ld	hl, 2
	or	a, a
	sbc	hl, de
	push	hl
	push	iy
	ld	hl, _bs
	push	hl
	call	_srl_Read
	ld	de, 2
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 22)
	add	iy, bc
	ld	a, (_bsock_timeout)
	and	a, 1
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	z, BB2_3
	bit	0, a
	ld	(ix - 22), iy
	jr	z, BB2_1
BB2_3:
	ld	hl, (ix - 25)
	push	hl
	call	_usb_StopTimer
	pop	hl
	ld	a, (ix - 6)
	cp	a, -68
	ld	l, 0
	jr	nz, BB2_8
	ld	a, (ix - 5)
	or	a, a
	jr	nz, BB2_6
	ld	l, 0
	jr	BB2_7
BB2_6:
	ld	l, -1
BB2_7:
	ld	a, l
	and	a, 1
	ld	(_bs+76), a
BB2_8:
	ld	a, l
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_timeout_action
_timeout_action:
	call	__frameset0
	ld	a, 1
	or	a, a
	sbc	hl, hl
	ld	(_bsock_timeout), a
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_bsocket_close
_bsocket_close:
	ld	hl, _bs
	push	hl
	call	_srl_Close
	pop	hl
	call	_usb_Cleanup
	xor	a, a
	ld	(_bs), a
	ld	hl, _bs
	push	hl
	pop	de
	inc	de
	ld	bc, 1100
	ldir
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_bsocket_setoption
_bsocket_setoption:
	call	__frameset0
	ld	bc, (ix + 6)
	xor	a, a
	ld	de, 5
	push	bc
	pop	hl
	sbc	hl, de
	jr	nc, BB5_14
	ld	hl, (ix + 9)
	ld	a, 1
	ld	iy, JTI5_0
	add	iy, bc
	add	iy, bc
	add	iy, bc
	ld	iy, (iy)
	jp	(iy)
BB5_2:
	ld	e, a
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB5_11
	ld	a, 0
	jr	BB5_12
BB5_4:
	ld	e, a
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB5_9
	ld	a, 0
	jr	BB5_10
BB5_6:
	ld	(_bs+70), hl
	jr	BB5_14
BB5_7:
	ld	(_bs+73), hl
	jr	BB5_14
BB5_8:
	ld	(_bs+66), hl
	jr	BB5_14
BB5_9:
	ld	a, 1
BB5_10:
	ld	(_bs+69), a
	jr	BB5_13
BB5_11:
	ld	a, 1
BB5_12:
	ld	(_bs+65), a
BB5_13:
	ld	a, e
BB5_14:
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI5_0
JTI5_0:
	dl	BB5_2
	dl	BB5_8
	dl	BB5_4
	dl	BB5_6
	dl	BB5_7

	section	.text,"ax",@progbits
	public	_bsocket_send
_bsocket_send:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, _bs
	ld	bc, 3
	ld	(ix - 3), hl
	ld	a, (_bs+69)
	bit	0, a
	push	bc
	pea	ix - 3
	push	de
	call	nz, _srl_Write
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix + 6)
	ld	hl, (_bs+70)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB6_2
	ld	hl, _bs+73
	ld	de, 3
	push	de
	push	hl
	ld	hl, _bs
	push	hl
	call	_srl_Write
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_bs+70)
	ld	de, (_bs+73)
	push	de
	push	hl
	ld	hl, _bs
	push	hl
	call	_srl_Write
	ld	de, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
BB6_2:
	ld	hl, (ix - 3)
	push	hl
	push	de
	ld	hl, _bs
	push	hl
	call	_srl_Write
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_bsocket_recv
_bsocket_recv:
	ld	hl, -13
	call	__frameset
	ld	de, _timeout_action
	xor	a, a
	ld	hl, _bs+66
	lea	bc, ix - 10
	ld	(ix - 13), bc
	ld	(ix - 3), de
	ld	(_bsock_timeout), a
	ld	hl, (hl)
	push	hl
	call	_usb_MsToCycles
	pop	bc
	push	de
	push	hl
	ld	hl, (ix - 13)
	push	hl
	call	_usb_StartTimerCycles
	pop	hl
	pop	hl
	pop	hl
BB7_1:
	call	_usb_HandleEvents
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	hl, _bs
	push	hl
	call	_srl_Read
	pop	hl
	pop	hl
	pop	hl
	ld	a, (_bsock_timeout)
	and	a, 1
	ld	hl, (ix + 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB7_3
	bit	0, a
	jr	z, BB7_1
BB7_3:
	ld	hl, (ix - 13)
	push	hl
	call	_usb_StopTimer
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_bsock_timeout
_bsock_timeout:
	rb	1

	section	.bss,"aw",@nobits
	public	_bs
_bs:
	rb	1101

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6c61664110f888c0285ae4c48b150c9a7a4361bb)"
	extern	_srl_Open
	extern	__Unwind_SjLj_Register
	extern	_usb_StopTimer
	extern	__frameset
	extern	_usb_FindDevice
	extern	_srl_Write
	extern	_usb_ResetDevice
	extern	_srl_GetCDCStandardDescriptors
	extern	_srl_Close
	extern	_usb_HandleEvents
	extern	_strlen
	extern	_usb_GetRole
	extern	__Unwind_SjLj_Unregister
	extern	_usb_StartTimerCycles
	extern	_srl_UsbEventCallback
	extern	_srl_Read
	extern	_usb_MsToCycles
	extern	__frameset0
	extern	_usb_Cleanup
	extern	_usb_Init
